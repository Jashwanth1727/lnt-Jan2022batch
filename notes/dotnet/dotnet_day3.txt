applocation logic:
	a. input/output or user interface logic
	b. business logic
	c. data access logic

application requirements:

1. business logic requirement:
A. need to create separate functions for calculation
			A. the functions must be created in separate class for just business logic
			B. every function must take two values (of type int)
			c. must do the calculation
			D. must return the calculated  result

B. if the lower case value is entered, then convert the same to uppercase
	i. create a class with function to convert upper case character to lower case character
	ii. functions must take a char type value
	iii. check the value is in upper case or not
	iv. if the character in uppercase convert the same to lower case
	v. return the lowercase character

2. UI logic requirement:
	a. need to print menu
	b. ask user for choice
	c. ask user for values
	d. call the proper calculation function based on choice
	e. ask user whether to continue or not		
	f. decide to continue the loop or exit

for
foreach
array

Object Oriented Programming:
PIE: Polymorphism, Inheritance, Encapsulation
abstraction:
	a. data abstraction: hiding the data inside the class object using private access specifier is data abstraction
	b. functional implementation abstraction: the function with public access specifier is exposed, but the code (implementation) inside that function is hidden from the outside user.

constructor:
if you do not write ANY constructor (default and parameterized), then ONLY default constructor will be supplied by the compiler when the code is converted to IL code
But, if you write any constructor (either default or parameterized), then that default constructor will NOT be supplied by the compiler when the code is converted to IL code
