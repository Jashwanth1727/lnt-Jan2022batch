data: information=> data is a collection of facts and figures, that can be processed to produce information
database: collection of related records (data)

what is dbms?
it is s/w or technology that maintains and manages (storing and retrieving) the data

advantages:
easy to access, manipulate
provides security
provides easy recovery and back up
faster data access

helps you to store metadata (data about data)
QL helps you to manipulate data easily
ACID properties: atomicity, consistency, isolation and durability
multi-user and concurent access

	real time entity (sony headphone)

attributes    		values
-------------------------------
product id: (ISBN) 	100
price: 			1000
name: 			sony headphone
realsed on: 		nov, 2021
make: 			sony
description: 		
material:		fiber/plastic

data in XML format:
<?xml version="1.0">
	<products>
		<product id=100>
			<name>sony headphone</name>
			<price>1000</price>
		</product>
                <product id=101>
			<name>iphone6</name>
			<price>2000</price>
		</product>
	</products>

View of data:
------------------------
External/view level
   product_id: 100
   product_price: 1000
   product_name: sony headphone

Conceptual (schema) level
  product_id	NUMBER
  product_price NUMBER (4)
  product_name  VARCHAR(MAX)

Internal (storage) level
  product_id TYPE=BYTE (4) OFFSET=0
  product_price TYPE=BYTE (7) OFFSET=4

data modelling:
it is the modelling or the way of describing your data, semantics and consusistency constraints
1. relational
2. semistructured
3. entity-relationship (ER)
4. object-based data model

ER data model: logical representation of data as objects and relationships between them
object: entity (===record)
relationship between the entities: association
characterestics of any entity: attribute (columns)
set of entities: entity set (records===table)
set of relations: relationship set
ER model diagrams:

relational data model:
tables: relations in relational model
organize data in rows/records/tuples and attributes/columns/fields as part of the table

table: products
columns: product_id, product_name, product_price, product_rating
primary key column: product_id 
foreign key column: category_id 

table: categories
columns: category_id, category_name
primary key column: category_id 

relation:
product_category_fk


types of database:
1. centralized database
2. distributed database
3. NoSQL database
4. Cloud database
5. Relational database (tables, data are related)
6. Network database
7. Object-oriented database (objects)
8. hierarchical database

Users of database management system:
administrators
designers
end users


relational model details:
relational data model:
tables: relations in relational model
organize data in rows/records/tuples and attributes/columns/fields as part of the table

relational schema:
table: products
columns: product_id, product_name, product_price, product_rating, category_id
primary key column: product_id 
foreign key column: category_id 

table: categories
columns: category_id, category_name
primary key column: category_id 

relationship:
product_category_fk

domain: a set of values that an attribute/field/column can have
relational instance: table with a collection/set of records/tuples

Ai---> dom(Ai)

relational key: a column or a collection of columns together, which can uniquely identify a tuple/record 

t1=<100, 1000, sony headphone, 4.5, 1>


relation, relational schema, relational instance
attribute/field/column
record/row/tuple
relational key
domain

relational operations:
select: 
projection
union
set
cartesian product
rename

integrity constraints:
a. domain constraint
b. entity integrity constraint
c. referential integrity constraint
d. key constraint

Redundancy:
	integrity constraints (functional dependency)
	decomposition

Incosistency
Uncertainty
Redundancy

normalization:
it is a step by step process of decomposing a complex table/relation into simple and stable data structure

different stages: normal forms
achieve normalization: through functional dependency
 - Full
 - partial
 - transitive

Norma Forms:
1NF, 2NF, 3NF, BCNF (Boyce-Codd normal form), 4, 5, 6

1NF: 
a. each table cell must have single value and 
b. each row must be unique

key:
primary key:
a. can't be NULL
b. should be unique
c. value should not change, and if changes that should be rare
d. primary key must be given value when a new record/tuple is added into the table/relation

composite key:
it's a primary key, but composed of multiple columns, used to uniquely identify records


2NF: 
a. be in 1NF
b. single column PK that does not functionally dependent on any subset of candidate key relation`

3NF:
a. be in 2NF
b. should not have any transitive functional dependency

SQL: structured query language
DDL: Data Definition Language: create table, alter table, drop table, truncate table, create and drop databases
DML: Data Manipulation Language: insert, update, delete records
DQL: Data Query Language: select, join etc.
DCL: Data Control Language: grant, revoke etc.
TCL: Transaction Control Language: commit, rollback, savepoint, set
