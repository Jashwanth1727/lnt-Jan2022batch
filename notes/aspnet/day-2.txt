1. Host class helps you to create a host builder (using static method CreateDefaultBuilder()
2. the builder helps you to create a host for web application (Web host)
3. builder creates the web host with some default configuration using ConfigureWebHostDefaults()
4. this method takes a delegate object of type Action<IWebHostBuilder> as an argument. the function referred by that delegate should contain configuration code for web host

http://localhost:6944/Home/SayHi/welcome to mvc
{controller}/{action}/{routedata}

controller=HomeController
action=SayHi
route data = welcome to mvc

who does these following job job?????
web host? NO

an object of HomeController class is created
the action/method by the name SayHi() is called from that object
that time the route data is passed as argument to the method

http://localhost:6944/Home/Index
{controller}/{action}/{routedata}
controller=HomeController
action=Index
route data = null

an object of HomeController class is created

the action/method by the name Index() is called from that object. no argument is passed to the method.

The Index() takes the view (index.cshtml) containing razor syntax. then it is passed to razor view engine.
razor view engine produces the pure HTML, by executing the C# code and producing the data to be displayed on the view. Now the Index() action returns that pure HTML as response to the client.

What can be return type of any action of a controller?
a. ViewResult (a view, HTML)
b. JsonResult (data in json format)
c. FileResult (file)
d. RedirectResult (redirection to another route)
etc.....
all these do implement an interface, named, IActionResult

also regular types (string, int, collection, array, any object etc.) can be returned from action


		